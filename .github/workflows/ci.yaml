name: CI
on: [ push, pull_request ]
jobs:
  make-release:
    name: Publish release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [ build-ubuntu, build-macos, build-windows ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download all build artifacts
        uses: actions/download-artifact@v2
      - name: Create Release
        shell: bash
        run: |
          tag_name="${GITHUB_REF##*/}"
          mkdir release
          mv $(find . -mindepth 1 -maxdepth 2 -type d -name 'SMCE_gd-*' -printf '%p/* ') release/
          cd release
          mkdir hashes
          for alg in md5 sha1 sha224 sha256 sha384 sha512; do
            "${alg}sum" $(find . -maxdepth 1 -type f | sed 's/.\///') > hashes/$alg.txt
          done
          mv hashes/* ./
          rmdir hashes
          hub release create $(find . -type f -printf "-a %p ") -m "SMCE_gd $tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-ubuntu:
    name: SMCE-gd - Ubuntu (${{ matrix.compiler.name }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - name: GCC 10
            c: gcc-10
            cxx: g++-10
          - name: Clang/LLVM 10
            c: clang-10
            cxx: clang++-10
    env:
      CC: ${{ matrix.compiler.c }}
      CXX: ${{ matrix.compiler.cxx }}
    steps:
      - uses: actions/checkout@v2
      - name: Check deps
        run: |
          sudo apt install godot3-server ninja-build
          godot3-server --version || true
          ninja --version
      - name: Cache Godot export template
        uses: actions/cache@v2
        id: cache-godot
        with:
          path: |
             ~/.local/share/godot/templates/3.2.stable
          key: godot-33rc6-linux_64
      - name: Get export templates
        if: steps.cache-godot.outputs.cache-hit != 'true'
        run: |
          wget -c https://downloads.tuxfamily.org/godotengine/3.3/rc6/Godot_v3.3-rc6_export_templates.tpz -O godot_export.tpz
          unzip godot_export.tpz
          mkdir -p ~/.local/share/godot/templates/3.2.stable
          mv templates/linux_x11_64* ~/.local/share/godot/templates/3.2.stable
      - name: CMake Configure
        run: |
          mkdir build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -S . -B build/
      - name: CMake Build
        run: cmake --build build/
      - name: CPack
        run: |
          mkdir build/packages
          (cd build/; cpack -B packages)
          rm -rd build/packages/_CPack_Packages
      - name: Upload artifacts
        uses: 'actions/upload-artifact@v2'
        with:
          name: SMCE_gd-ubuntu-${{ matrix.compiler.c }}
          path: build/packages/*
  build-macos:
    name: SMCE-gd - macOS (${{ matrix.compiler.name }})
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - name: GCC 10
            slug: gcc
            c: gcc-10
            cxx: g++-10
          - name: Clang/LLVM 11
            slug: clang
            c: clang-11
            cxx: clang++-11
          - name: AppleClang 12
            slug: appleclang
            c: clang
            cxx: clang++
    env:
      CC: ${{ matrix.compiler.c }}
      CXX: ${{ matrix.compiler.cxx }}
    steps:
      - uses: actions/checkout@v2
      - name: Check deps
        run: |
          brew install --cask godot
          ln -s /Applications/Godot.app/Contents/MacOS/Godot /usr/local/bin/godot3
          brew install ninja
          godot3 --version || true
          ninja --version
      - name: Cache Godot export template
        uses: actions/cache@v2
        id: cache-godot
        with:
          path: ~/Library/Application\ Support/Godot/templates/3.2.3.stable
          key: godot-33rc6-osx-f0
      - name: Get export templates
        if: steps.cache-godot.outputs.cache-hit != 'true'
        run: |
          wget -qc https://downloads.tuxfamily.org/godotengine/3.3/rc6/Godot_v3.3-rc6_export_templates.tpz -O godot_export.tpz
          unzip godot_export.tpz
          mkdir -p ~/Library/Application\ Support/Godot/templates/3.2.3.stable
          mv templates/osx* ~/Library/Application\ Support/Godot/templates/3.2.3.stable
      - name: CMake Configure
        run: |
          [ "$CC" = "clang-11" ] && export CC="$(brew --prefix llvm)/bin/clang -stdlib=libc++ -nostdinc++ -I/usr/local/opt/llvm/include/c++/v1 -L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
          [ "$CXX" = "clang++-11" ] && export CXX="$(brew --prefix llvm)/bin/clang++ -stdlib=libc++ -nostdinc++ -I/usr/local/opt/llvm/include/c++/v1 -L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
          mkdir build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -S . -B build/
      - name: CMake Build
        run: cmake --build build/
      - name: CPack
        run: |
          mkdir build/packages
          (cd build/; cpack -B packages)
          rm -rd build/packages/_CPack_Packages
      - name: Upload artifacts
        uses: 'actions/upload-artifact@v2'
        with:
          name: SMCE_gd-macos-${{ matrix.compiler.slug }}
          path: build/packages/*
  build-windows:
    name: SMCE-gd - Windows (${{ matrix.compiler.name }})
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - name: MSVC
            c: cl
            cxx: cl
#         - name: Clang/LLVM
#           c: clang-cl
#           cxx: clang++-cl
#   env:
#     CC: ${{ matrix.compiler.c }}
#     CXX: ${{ matrix.compiler.cxx }}
    steps:
      - uses: actions/checkout@v2
      - name: Check deps
        run: |
          choco install ninja godot
          ninja --version
          godot --version || true
      - name: Cache Godot export template
        uses: actions/cache@v2
        id: cache-godot
        with:
          path: ~/AppData/Roaming/Godot/templates/3.2.3.stable
          key: godot-323-win64
      - name: Get export templates
        if: steps.cache-godot.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          Invoke-WebRequest https://downloads.tuxfamily.org/godotengine/3.3/rc6/Godot_v3.3-rc6_export_templates.tpz -OutFile godot_export.zip
          Expand-Archive -Path godot_export.zip -DestinationPath .
          New-Item -ItemType Directory -Path ~\AppData\Roaming\Godot\templates\3.2.3.stable
          Move-Item -Path .\templates\windows_64* -Destination ~\AppData\Roaming\Godot\templates\3.2.3.stable
      - name: Get Mesa3D
        shell: powershell
        run: |
          Invoke-WebRequest "https://downloads.fdossena.com/geth.php?r=mesa64-latest" -OutFile winmesa.7z
          7z e -y winmesa.7z
          Move-Item -Path .\opengl32.dll -Destination C:\ProgramData\chocolatey\lib\godot\tools
      - uses: ilammy/msvc-dev-cmd@v1
      - name: CMake configure
        run: |
          mkdir build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -S ./ -B ./build
      - name: CMake build
        run: cmake --build ./build
      - name: Package
        run: |
          mkdir ./build/packages
          cd build
          cpack -B packages
          rm -R packages/_CPack_Packages
          cd ..
      - name: Upload artifacts
        uses: 'actions/upload-artifact@v2'
        with:
          name: SMCE_gd-windows-${{ matrix.compiler.c }}
          path: build/packages/*
